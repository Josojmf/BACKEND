# import Date, ObjectID, Role from "./scalars.graphql"
# import Exercise from "./exercise.graphql"
# import File from "./upload.graphql"
# import Upload from "./scalars.graphql"

directive @authRequired(
  requires: [Role] = [ADMIN],
) on QUERY | FIELD

enum Role {
  ADMIN
  USER
  EPHEMERAL
}

type Query {
  documents: [Document]               @authRequired(requires: [USER])
  document(id: ObjectID!): Document   @authRequired(requires: [USER])
}
type Mutation {
  createDocument(input: DocumentIn!): Document                      @authRequired(requires: [USER])
  deleteDocument(id: ObjectID!): Document                           @authRequired(requires: [USER])
  updateDocument(id: ObjectID!, input: DocumentIn): Document        @authRequired(requires: [USER])
}
type Subscription {
  documentUpdated: Document   @authRequired(requires: [USER])
}

type Document {
  id: ObjectID
  user: ObjectID
  title: String!
  type: String
  folder: ObjectID
  content: String
  cache: String
  description: String
  version: String
  image: String
  createdAt: Date
  updatedAt: Date
  exercises: [Exercise]
  images: [File]
}

input DocumentIn {
  user: ObjectID
  title: String
  type: String
  folder: ObjectID
  content: String
  cache: String
  description: String
  version: String
  image: Upload
  imageUrl: String
}
