# import Date, ObjectID from "./scalars.graphql"
# import Document from "./document.graphql"

directive @authRequired(
  requires: [Role] = [ADMIN],
) on QUERY | FIELD

enum Role {
  ADMIN
  USER
  EPHEMERAL
}

type Query {
  folders: [Folder]                                   @authRequired(requires: [USER])
  folder(id: ObjectID!): Folder                       @authRequired(requires: [USER])
  rootFolder: Folder                                  @authRequired(requires: [USER])
}
type Mutation {
  createFolder(input: FolderIn): Folder                 @authRequired(requires: [USER])
  updateFolder(id: ObjectID!, input: FolderIn): Folder  @authRequired(requires: [USER])
  deleteFolder(id: ObjectID!): Folder                   @authRequired(requires: [USER])
}
type Subscription {
  folderUpdated: Folder   @authRequired(requires: [USER])
}

type Folder {
  id: ObjectID
  name: String
  user: ObjectID
  documentsID: [ObjectID]
  foldersID: [ObjectID]
  parent: ObjectID
  createdAt: Date
  updatedAt: Date
  documents: [Document]
  folders: [Folder]
}

input FolderIn {
  name: String
  user: ObjectID
  documentsID: [ObjectID]
  foldersID: [ObjectID]
  parent: ObjectID
}

